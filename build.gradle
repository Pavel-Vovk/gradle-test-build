plugins {
    id 'groovy'
}

// Assembling and testing simple groovy project
group 'com.sample'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    compile 'commons-cli:commons-cli:1.4'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

test {
    testLogging.showStandardStreams = true
}

// This is one this project is written for
class TestTask extends DefaultTask {

    String failMessage
    String sleepTime
    String printMessage = "Printed Default Message"

    // Parameters will be passed in the constructor (which is generated by Groovy)

    @TaskAction
    void doConfiguredTask() {
        if (failMessage) {
            throw new RuntimeException((String) failMessage)
        }

        if (sleepTime) {
            Thread.sleep(Long.valueOf((String) sleepTime))
        }

        if (printMessage) {
            println printMessage
        }

    }

}

task configuredTask(type: TestTask) {
    if (variablesSource == 'properties') {
        failMessage = failMessage ?: ""
        sleepTime = sleepTime ?: 0
        printMessage = testMessage ?: "Default message"
    } else if (variablesSource == 'environment') {
        failMessage = System.getenv("FAIL_MESSAGE") ?: ""
        sleepTime = System.getenv("SLEEP_TIME") ?: 0
        printMessage = System.getenv("TEST_MESSAGE") ?: "Default message"
    } else {
        throw new RuntimeException("variablesSource should be 'properties' or 'environment'")
    }
}

// Adding the task to 'check' phase
check.dependsOn.add('configuredTask')